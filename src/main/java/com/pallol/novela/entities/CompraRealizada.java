package com.pallol.novela.entities;
// Generated 25/07/2019 01:09:25 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CompraRealizada generated by hbm2java
 */
@Entity
@Table(name = "compra_realizada",
         catalog = "noveladb"
)
public class CompraRealizada implements java.io.Serializable {

    private int id;
    private Usuario usuario;
    private int montoTotal;
    private boolean realizada;
    private Date fechaCreacion;
    private Set<ProductoCompra> productoCompras = new HashSet<ProductoCompra>(0);

    public CompraRealizada() {
    }

    public CompraRealizada(int id, Usuario usuario, int montoTotal, boolean realizada, Date fechaCreacion) {
        this.id = id;
        this.usuario = usuario;
        this.montoTotal = montoTotal;
        this.realizada = realizada;
        this.fechaCreacion = fechaCreacion;
    }

    public CompraRealizada(int id, Usuario usuario, int montoTotal, boolean realizada, Date fechaCreacion, Set<ProductoCompra> productoCompras) {
        this.id = id;
        this.usuario = usuario;
        this.montoTotal = montoTotal;
        this.realizada = realizada;
        this.fechaCreacion = fechaCreacion;
        this.productoCompras = productoCompras;
    }

    @Id

    @Column(name = "compra_realizada_id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idusuario")
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Column(name = "monto_total", nullable = false)
    public int getMontoTotal() {
        return this.montoTotal;
    }

    public void setMontoTotal(int montoTotal) {
        this.montoTotal = montoTotal;
    }

    @Column(name = "realizada", nullable = false)
    public boolean isRealizada() {
        return this.realizada;
    }

    public void setRealizada(boolean realizada) {
        this.realizada = realizada;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_creacion", nullable = false, length = 10)
    public Date getFechaCreacion() {
        return this.fechaCreacion;
    }

    public void setFechaCreacion(Date fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "compraRealizada", cascade = CascadeType.ALL)
    public Set<ProductoCompra> getProductoCompras() {
        return this.productoCompras;
    }

    public void setProductoCompras(Set<ProductoCompra> productoCompras) {
        this.productoCompras = productoCompras;
    }

}
