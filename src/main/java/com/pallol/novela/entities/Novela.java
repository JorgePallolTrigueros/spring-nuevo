package com.pallol.novela.entities;
// Generated 25/07/2019 01:09:25 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Novela generated by hbm2java
 */
@Entity
@Table(name = "novela",
         catalog = "noveladb"
)
public class Novela implements java.io.Serializable {

    private Integer novelaId;
    private Categoria categoria;
    private String nombre;
    private String descripciong;
    private int precio;
    private String notas;
    private String anotacion;
    private String imagen;
    private String descripcionp;
    private Integer votos;
    private Set<Personaje> personajes = new HashSet<Personaje>(0);
    private Set<Galeria> galerias = new HashSet<Galeria>(0);
    private Set<Comentario> comentarios = new HashSet<Comentario>(0);
    private Set<Capitulo> capitulos = new HashSet<Capitulo>(0);
    private Set<UsuarioNovela> usuarioNovelas = new HashSet<UsuarioNovela>(0);

    public Novela() {
    }

    public Novela(Categoria categoria, String descripciong, int precio, String notas, String anotacion, String imagen, String descripcionp) {
        this.categoria = categoria;
        this.descripciong = descripciong;
        this.precio = precio;
        this.notas = notas;
        this.anotacion = anotacion;
        this.imagen = imagen;
        this.descripcionp = descripcionp;
    }

    public Novela(Categoria categoria, String nombre, String descripciong, int precio, String notas, String anotacion, String imagen, String descripcionp, Integer votos, Set<Personaje> personajes, Set<Galeria> galerias, Set<Comentario> comentarios, Set<Capitulo> capitulos, Set<UsuarioNovela> usuarioNovelas) {
        this.categoria = categoria;
        this.nombre = nombre;
        this.descripciong = descripciong;
        this.precio = precio;
        this.notas = notas;
        this.anotacion = anotacion;
        this.imagen = imagen;
        this.descripcionp = descripcionp;
        this.votos = votos;
        this.personajes = personajes;
        this.galerias = galerias;
        this.comentarios = comentarios;
        this.capitulos = capitulos;
        this.usuarioNovelas = usuarioNovelas;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "novela_id", unique = true, nullable = false)
    public Integer getNovelaId() {
        return this.novelaId;
    }

    public void setNovelaId(Integer novelaId) {
        this.novelaId = novelaId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "categoria_id_fk", nullable = false)
    public Categoria getCategoria() {
        return this.categoria;
    }

    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }

    @Column(name = "nombre", length = 75)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "descripciong", nullable = false, length = 65535)
    public String getDescripciong() {
        return this.descripciong;
    }

    public void setDescripciong(String descripciong) {
        this.descripciong = descripciong;
    }

    @Column(name = "precio", nullable = false)
    public int getPrecio() {
        return this.precio;
    }

    public void setPrecio(int precio) {
        this.precio = precio;
    }

    @Column(name = "notas", nullable = false)
    public String getNotas() {
        return this.notas;
    }

    public void setNotas(String notas) {
        this.notas = notas;
    }

    @Column(name = "anotacion", nullable = false, length = 65535)
    public String getAnotacion() {
        return this.anotacion;
    }

    public void setAnotacion(String anotacion) {
        this.anotacion = anotacion;
    }

    @Column(name = "imagen", nullable = false, length = 65535)
    public String getImagen() {
        return this.imagen;
    }

    public void setImagen(String imagen) {
        this.imagen = imagen;
    }

    @Column(name = "descripcionp", nullable = false, length = 65535)
    public String getDescripcionp() {
        return this.descripcionp;
    }

    public void setDescripcionp(String descripcionp) {
        this.descripcionp = descripcionp;
    }

    @Column(name = "votos")
    public Integer getVotos() {
        return this.votos;
    }

    public void setVotos(Integer votos) {
        this.votos = votos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "novela")
    public Set<Personaje> getPersonajes() {
        return this.personajes;
    }

    public void setPersonajes(Set<Personaje> personajes) {
        this.personajes = personajes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "novela")
    public Set<Galeria> getGalerias() {
        return this.galerias;
    }

    public void setGalerias(Set<Galeria> galerias) {
        this.galerias = galerias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "novela")
    public Set<Comentario> getComentarios() {
        return this.comentarios;
    }

    public void setComentarios(Set<Comentario> comentarios) {
        this.comentarios = comentarios;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "novela")
    public Set<Capitulo> getCapitulos() {
        return this.capitulos;
    }

    public void setCapitulos(Set<Capitulo> capitulos) {
        this.capitulos = capitulos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "novela")
    public Set<UsuarioNovela> getUsuarioNovelas() {
        return this.usuarioNovelas;
    }

    public void setUsuarioNovelas(Set<UsuarioNovela> usuarioNovelas) {
        this.usuarioNovelas = usuarioNovelas;
    }

}
